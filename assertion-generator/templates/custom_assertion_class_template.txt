package ${package};

import static java.lang.String.format;

import org.fest.assertions.api.AbstractAssert;
import org.fest.assertions.api.Assertions;
${imports}

/**
 * {@link ${class_to_assert}} specific assertions - Generated by CustomAssertionGenerator.
 */
public class ${class_to_assert}Assert extends AbstractAssert<${class_to_assert}Assert, ${class_to_assert}> {

  /**
   * Creates a new </code>{@link ${class_to_assert}Assert}</code> to make assertions on actual ${class_to_assert}.
   * @param actual the ${class_to_assert} we want to make assertions on.
   */
  public ${class_to_assert}Assert(${class_to_assert} actual) {
    super(actual, ${class_to_assert}Assert.class);
  }

  /**
   * An entry point for ${class_to_assert}Assert to follow Fest standard <code>assertThat()</code> statements.<br>
   * With a static import, one's can write directly : <code>assertThat(my${class_to_assert})</code> and get specific assertion with code completion.
   * @param actual the ${class_to_assert} we want to make assertions on.
   * @return a new </code>{@link ${class_to_assert}Assert}</code>
   */
  public static ${class_to_assert}Assert assertThat(${class_to_assert} actual) {
    return new ${class_to_assert}Assert(actual);
  }
